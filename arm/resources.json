{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appMame": {
            "type": "string",
            "defaultValue": "mockster",
            "metadata": {
                "description": "The name of the app to deploy."
            }
        },
        "environment": {
            "type": "string",
            "allowedValues": [
                "DEV",
                "PROD"
            ],
            "defaultValue": "DEV",
            "metadata": {
                "description": "The environment to deploy to."
            }
        }
    },
    "functions": [],
    "variables": {
        "apiEndpoints": [
            {
                "displayName": "Get Airlines",
                "urlTemplate": "/airlines"
            },
            {
                "displayName": "Get Animals",
                "urlTemplate": "/animals"
            },
            {
                "displayName": "Get Colors",
                "urlTemplate": "/colors"
            },
            {
                "displayName": "Get Companies",
                "urlTemplate": "/companies"
            },
            {
                "displayName": "Get Databases",
                "urlTemplate": "/databases"
            },
            {
                "displayName": "Get Dates",
                "urlTemplate": "/dates"
            },
            {
                "displayName": "Get Finances",
                "urlTemplate": "/finances"
            },
            {
                "displayName": "Get Gits",
                "urlTemplate": "/gits"
            },
            {
                "displayName": "Get Hackers",
                "urlTemplate": "/hackers"
            },
            {
                "displayName": "Get Internets",
                "urlTemplate": "/internets"
            },
            {
                "displayName": "Get Locations",
                "urlTemplate": "/locations"
            },
            {
                "displayName": "Get Lorems",
                "urlTemplate": "/lorems"
            },
            {
                "displayName": "Get Musics",
                "urlTemplate": "/musics"
            },
            {
                "displayName": "Get Numbers",
                "urlTemplate": "/numbers"
            },
            {
                "displayName": "Get Persons",
                "urlTemplate": "/persons"
            },
            {
                "displayName": "Get Phones",
                "urlTemplate": "/phones"
            },
            {
                "displayName": "Get Products",
                "urlTemplate": "/products"
            },
            {
                "displayName": "Get Sciences",
                "urlTemplate": "/sciences"
            },
            {
                "displayName": "Get Strings",
                "urlTemplate": "/strings"
            },
            {
                "displayName": "Get Systems",
                "urlTemplate": "/systems"
            },
            {
                "displayName": "Get Vehicles",
                "urlTemplate": "/vehicles"
            },
            {
                "displayName": "Get Words",
                "urlTemplate": "/words"
            }
        ],
        "apimName": "[concat('apim-', parameters('appMame'), '-', variables('environment'))]",
        "apimHostName": {
            "DEV": "api-dev.mockster.dev",
            "PROD": "api.mockster.dev"
        },
        "apimProductName": "[concat(variables('apimName'),'-',parameters('appMame'))]",
        "apimVersionSetName": "[concat(variables('apimName'),'-',variables('suffix'))]",
        "apiName": "[concat(variables('apimName'),'-',parameters('appMame'),'-v1')]",
        "applicationInsightsName": "[concat('appi-', parameters('appMame'), '-', variables('environment'))]",
        "availabilityTestName": "Ping persons endpoint",
        "environment": "[toLower(parameters('environment'))]",
        "functionName": "[concat('fa-', parameters('appMame'), '-', variables('environment'))]",
        "keyVaultName": "[concat('kv-', parameters('appMame'), '-', variables('environment'))]",
        "logWorkspaceName": "[concat('log-', parameters('appMame'), '-', variables('environment'))]",
        "serverFarmName": "[concat('asp-', parameters('appMame'), '-', variables('environment'))]",
        "staticSiteName": "[concat('swa-', parameters('appMame'), '-', variables('environment'))]",
        "storageAccountName": "[concat('st', parameters('appMame'), variables('environment'))]",
        "suffix": "[uniqueString(resourceGroup().id)]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "defaultToOAuthAuthentication": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-02-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enablesoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "name": "[variables('serverFarmName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {}
        },
        {
            "name": "[variables('functionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsFeatureFlags",
                            "value": "EnableWorkerIndexing"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('functionName')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~20"
                        }
                    ],
                    "ftpsState": "FtpsOnly",
                    "minTlsVersion": "1.2"
                },
                "httpsOnly": true
            },
            "resources": [
                {
                    "type": "config",
                    "apiVersion": "2022-09-01",
                    "name": "web",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
                    ],
                    "properties": {
                        "numberOfWorkers": 1,
                        "netFrameworkVersion": "v4.0",
                        "autoHealEnabled": true,
                        "apiManagementConfig": {
                            "id": "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), variables('apiName'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
            }
        },
        {
            "type": "Microsoft.Insights/webtests",
            "apiVersion": "2022-06-15",
            "condition": "[equals(parameters('environment'), 'PROD')]",
            "name": "[variables('availabilityTestName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', variables('applicationInsightsName')))]": "Resource"
            },
            "kind": "standard",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
            ],
            "properties": {
                "Description": "Availability test for persons endpoint",
                "Enabled": true,
                "Frequency": 900,
                "Kind": "standard",
                "Locations": [
                    {
                        "Id": "emea-nl-ams-azr"
                    },
                    {
                        "Id": "us-tx-sn1-azr"
                    },
                    {
                        "Id": "us-va-ash-azr"
                    },
                    {
                        "Id": "apac-hk-hkn-azr"
                    },
                    {
                        "Id": "emea-au-syd-edge"
                    }
                ],
                "Name": "[variables('availabilityTestName')]",
                "RetryEnabled": true,
                "SyntheticMonitorId": "[variables('availabilityTestName')]",
                "Request": {
                    "HttpVerb": "GET",
                    "RequestUrl": "[concat('https://',variables('apimHostName')[variables('environment')], '/api/v1/persons')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[variables('logWorkspaceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "pergb2018"
                }
            }
        },
        {
            "condition": "[equals(parameters('environment'), 'PROD')]",
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2022-09-01",
            "name": "[variables('staticSiteName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Free",
                "tier": "Free"
            },
            "properties": {
                "stagingEnvironmentPolicy": "Enabled",
                "allowConfigFileUpdates": true,
                "enterpriseGradeCdnStatus": "Disabled",
                "buildProperties": {
                    "appLocation": "/docs",
                    "apiLocation": "",
                    "appArtifactLocation": "build"
                }
            }
        },
        {
            "condition": "[equals(parameters('environment'), 'PROD')]",
            "type": "Microsoft.Web/staticSites/customDomains",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('staticSiteName'), '/mockster.dev')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/staticSites', variables('staticSiteName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2023-03-01-preview",
            "name": "[variables('apimName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Consumption",
                "capacity": 0
            },
            "properties": {
                "publisherEmail": "mikko.berg@me.com",
                "publisherName": "Mikko Berg",
                "hostnameConfigurations": [
                    {
                        "hostName": "[variables('apimHostName')[variables('environment')]]",
                        "type": "Proxy",
                        "certificateSource": "Managed"
                    }
                ]
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "type": "apiVersionSets",
                    "apiVersion": "2023-03-01-preview",
                    "name": "[variables('apimVersionSetName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
                    ],
                    "properties": {
                        "displayName": "Mockster",
                        "description": "Mockster API version set",
                        "versioningScheme": "Segment",
                        "versionQueryName": "api-version",
                        "versionHeaderName": "api-version"
                    }
                },
                {
                    "type": "loggers",
                    "apiVersion": "2022-08-01",
                    "name": "[concat(variables('apimName'), '-loggers')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
                    ],
                    "properties": {
                        "loggerType": "applicationInsights",
                        "description": "Application Insights logger with system-assigned managed identity",
                        "resourceId": "[resourceId('microsoft.Insights/components/', variables('applicationInsightsName'))]",
                        "credentials": {
                            "connectionString": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2020-02-02').ConnectionString]",
                            "identityClientId": "SystemAssigned"
                        }
                    }
                },
                {
                    "type": "products",
                    "apiVersion": "2023-03-01-preview",
                    "name": "[variables('apimProductName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
                    ],
                    "properties": {
                        "displayName": "Mockster",
                        "description": "Mocking data API",
                        "subscriptionRequired": false,
                        "state": "published"
                    }
                },
                {
                    "type": "apis",
                    "apiVersion": "2023-03-01-preview",
                    "name": "[variables('apiName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionName'))]",
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                        "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', variables('apimName'), variables('apimVersionSetName'))]"
                    ],
                    "properties": {
                        "displayName": "Mockster-v1",
                        "apiRevision": "1",
                        "path": "/api",
                        "protocols": [
                            "https"
                        ],
                        "apiVersion": "v1",
                        "isCurrent": true,
                        "subscriptionRequired": false,
                        "serviceUrl": "[concat('https://', variables('functionName'), '.azurewebsites.net/')]",
                        "apiVersionSetId": "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', variables('apimName'), variables('apimVersionSetName'))]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/diagnostics",
            "apiVersion": "2023-05-01-preview",
            "name": "[concat(variables('apimName'), '/', variables('apiName'), '/applicationinsights')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), variables('apiName'))]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), concat(variables('apimName'), '-loggers'))]"
            ],
            "properties": {
                "alwaysLog": "allErrors",
                "httpCorrelationProtocol": "Legacy",
                "verbosity": "information",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), concat(variables('apimName'), '-loggers'))]",
                "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                },
                "frontend": {
                    "request": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                },
                "backend": {
                    "request": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    },
                    "response": {
                        "headers": [],
                        "body": {
                            "bytes": 0
                        }
                    }
                }
            }
        },
        {
            // Generating api endpoints in apim with copy loop
            "copy": {
                "name": "apiEndpoints",
                "count": "[length(variables('apiEndpoints'))]"
            },
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(variables('apimName'), '/', variables('apiName'), '/', replace(toLower(variables('apiEndpoints')[copyIndex()].displayName),' ', ''))]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), variables('apiName'))]"
            ],
            "properties": {
                "displayName": "[variables('apiEndpoints')[copyIndex()].displayName]",
                "method": "GET",
                "urlTemplate": "[variables('apiEndpoints')[copyIndex()].urlTemplate]",
                "request": {
                    "queryParameters": [
                        {
                            "name": "count",
                            "type": "integer",
                            "values": [],
                            "required": false,
                            "description": "Count of requested objects to be returned. Default is 10."
                        },
                        {
                            "name": "locale",
                            "type": "string",
                            "values": [
                                "af_ZA",
                                "ar",
                                "az",
                                "base",
                                "cs_CZ",
                                "da",
                                "de",
                                "de_AT",
                                "de_CH",
                                "dv",
                                "el",
                                "en",
                                "en_AU",
                                "en_AU_ocker",
                                "en_BORK",
                                "en_CA",
                                "en_GB",
                                "en_GH",
                                "en_HK",
                                "en_IE",
                                "en_IN",
                                "en_NG",
                                "en_US",
                                "en_ZA",
                                "eo",
                                "es",
                                "es_MX",
                                "fa",
                                "fi",
                                "fr",
                                "fr_BE",
                                "fr_CA",
                                "fr_CH",
                                "fr_LU",
                                "fr_SN",
                                "he",
                                "hr",
                                "hu",
                                "hy",
                                "id_ID",
                                "it",
                                "ja",
                                "ka_GE",
                                "ko",
                                "lv",
                                "mk",
                                "nb_NO",
                                "ne",
                                "nl",
                                "nl_BE",
                                "pl",
                                "pt_BR",
                                "pt_PT",
                                "ro",
                                "ro_MD",
                                "ru",
                                "sk",
                                "sr_RS_latin",
                                "sv",
                                "th",
                                "tr",
                                "uk",
                                "ur",
                                "vi",
                                "yo_NG",
                                "zh_CN",
                                "zh_TW",
                                "zu_ZA"
                            ],
                            "required": false,
                            "description": "Locale of the requested objects. Default is en."
                        },
                        {
                            "name": "seed",
                            "type": "string",
                            "values": [],
                            "required": false,
                            "description": "Seed for random data generation."
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "OK",
                        "representation": {
                            "contentType": "application/json"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(variables('apimName'), '/', variables('apiName'), '/getimages' )]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), variables('apiName'))]"
            ],
            "properties": {
                "displayName": "Get images",
                "method": "GET",
                "urlTemplate": "/images",
                "request": {
                    "queryParameters": [
                        {
                            "name": "count",
                            "type": "integer",
                            "values": [],
                            "required": false,
                            "description": "Count of requested objects to be returned. Default is 10."
                        },
                        {
                            "name": "category",
                            "type": "string",
                            "values": [
                                "abstract",
                                "animals",
                                "business",
                                "cats",
                                "city",
                                "food",
                                "nightlife",
                                "fashion",
                                "people",
                                "nature",
                                "sports",
                                "technics",
                                "transport"
                            ],
                            "required": false,
                            "description": "Category of the requested images. Default is random."
                        },
                        {
                            "name": "width",
                            "type": "integer",
                            "values": [],
                            "required": false,
                            "description": "Width of the requested images. Default is 640."
                        },
                        {
                            "name": "height",
                            "type": "integer",
                            "values": [],
                            "required": false,
                            "description": "Height of the requested images. Default is 480."
                        }

                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "OK",
                        "representation": {
                            "contentType": "application/json"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {}
}
